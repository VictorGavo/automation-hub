# Nginx Configuration Template for Automation Hub
# Replace YOURDOMAIN.COM with your actual domain

# Rate limiting zones - adjust rates based on your needs
limit_req_zone $binary_remote_addr zone=webhook:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;

# Upstream backend
upstream automation_hub_backend {
    server 127.0.0.1:5000 fail_timeout=10s max_fails=3;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name YOURDOMAIN.COM www.YOURDOMAIN.COM;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOURDOMAIN.COM www.YOURDOMAIN.COM;
    
    # SSL Configuration (will be managed by certbot)
    ssl_certificate /etc/letsencrypt/live/YOURDOMAIN.COM/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN.COM/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Security Headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    
    # Remove server tokens for security
    server_tokens off;
    
    # Logging
    access_log /var/log/nginx/automation-hub.access.log;
    error_log /var/log/nginx/automation-hub.error.log warn;
    
    # Client settings
    client_max_body_size 2M;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Webhook endpoints - Critical for Google Apps Script integration
    location /webhook/ {
        # Rate limiting for webhook endpoints
        limit_req zone=webhook burst=5 nodelay;
        
        # Proxy settings
        proxy_pass http://automation_hub_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeout settings for webhook processing
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Webhook-specific headers
        proxy_set_header X-Request-ID $request_id;
        
        # Log webhook requests for debugging
        access_log /var/log/nginx/webhook.access.log;
        error_log /var/log/nginx/webhook.error.log;
    }
    
    # Health check endpoint - No rate limiting for monitoring
    location = /health {
        proxy_pass http://automation_hub_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 10s;
        
        # Don't log health checks to reduce noise
        access_log off;
    }
    
    # API endpoints with moderate rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://automation_hub_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;  
        proxy_read_timeout 30s;
        
        # Cache API responses briefly
        proxy_cache_valid 200 1m;
    }
    
    # Status endpoint for administrative monitoring
    location = /status {
        limit_req zone=general burst=10 nodelay;
        
        proxy_pass http://automation_hub_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Restrict access to local network (adjust as needed)
        allow 192.168.0.0/16;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 127.0.0.1;
        deny all;
    }
    
    # Robots.txt - Prevent search engine indexing
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
    
    # Favicon - Return 204 to avoid 404 errors
    location = /favicon.ico {
        return 204;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ^/(\.env|config\.py|requirements\.txt|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block all other requests for security
    location / {
        # Log blocked requests for security monitoring
        access_log /var/log/nginx/blocked.access.log;
        return 404;
    }
}

# Optional: Separate server block for monitoring/admin interface
# Uncomment and configure if you want a separate admin interface
#
# server {
#     listen 8443 ssl http2;
#     server_name YOURDOMAIN.COM;
#     
#     ssl_certificate /etc/letsencrypt/live/YOURDOMAIN.COM/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN.COM/privkey.pem;
#     
#     # Restrict to specific IP addresses
#     allow YOUR_HOME_IP;
#     allow YOUR_OFFICE_IP;
#     deny all;
#     
#     location / {
#         proxy_pass http://automation_hub_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# Log format for detailed webhook debugging
log_format webhook_debug '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'request_id=$request_id';

# Additional security configurations
map $http_user_agent $blocked_agent {
    ~*malicious 1;
    ~*attack   1;
    ~*scan     1;
    default    0;
}

# Block malicious user agents
server {
    listen 443 ssl http2;
    server_name _;
    
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    
    if ($blocked_agent) {
        return 444;
    }
    
    return 444;  # Close connection for unknown hosts
}
